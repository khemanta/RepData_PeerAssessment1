library(swirl)
swirl()
install_from_swirl("R Programming")
1
main()
swirl()
5+7
x <- 5+7
x
y <- x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
z <- c(z, 555)
c(z, 555)
info()
info()
(c(,z, 555, z)
)
c(,z, 555, z)
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/(my_sqrt)
my_div <- z/my_sqrt
my_div
c
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my
myDiv
my_div
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Kumar Hemant")
my_name
paste(my_name, collapse=" ")
paste("Hello", "World!", sep=" ")
paste("Hello", "world!", sep=" ")
c("X", "Y", "Z", sep="")
paste("X", "Y", "Z", sep="")
paste(1:3, c("X", "Y", "Z"), sep= "")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0 ]
x[3,5,7]
x
x[3]
c(x[3],x[5],x[7])
x(x[3],x[5],x[7])
x[c(x[3],x[5],x[7])]
c(x[3],x[5],x[7])
x[c(x[3],x[5],x[7])]
x(c(x[3],x[5],x[7])
)
x[c(x[3],x[5],x[7]]
x[p=c(x[3], x[5], x[7])]
x[p<-c(x[3], x[5], x[7])]
x
x[3,5,7]
c(x[3],x[5],x[7])
x[3:7,by=2]
x[3:7, by=2]
x[3:7, by==\2]
x[3:7, by==2]
x[3:7]
p<-c(x[3],x[5],x[7])
p
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c (foo=11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
1
vect[bar]
vect["bar"]
vect["2"]
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c[1:20]
my_vector <- c(1:20)
my_vector <- seq(1:20)
my_vector <- seq[1:20]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
?matrix
matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frames(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cname <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(mydata)
colnames(mydata) <- cnames
colnames(mydata) <- cnames
colnames(my_data) <- cnames
my_data
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range())
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
viewinfo(flags)
viewinfo(flag)
viewinfo()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flag$animate, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head()
head(plants, nrow=10)
head(plants, 10)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str()
str(flags)
str(plants)
?sample
sample(11:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:6, 4)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100)
sample(c(0,1), 100, replace=TRUE)
flips<- sample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips<- sample(c(0,1), 100, replace=TRUE, prob=0.7)
flips2<- sample(c(0,1), 100, replace=TRUE, prob=0.7)
flips2<- sample(c(0,1), 100, prob=0.7)
flips2 <- rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(100, 1, prob=0.7)
flips2
sum(flips2)
rnorm()
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
?rnorm
?rpois
rpois(5, 10)
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- comMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(T2))
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3,, "%B %d, %Y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
swirl()
q()
q()
swirl()
q()
q()
swirl()
library(swirl)
rm(list=ls())
library(swirl)
swirl()
library(tidyr)
student
students
??gather
?gather
gather(students, sex, count, -grade)
students2
?gather
gather(students2, sex_class, count)
students2
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data=res, col=sex_class, into=c("sex","class"), remove=TRUE, convert=FALSE)
separate(res, sex_class, c("sex","class"))
submit
submit()
students3
submit()
submit()
submit()
gather?
)
reset
reset()
gather?
)
reset()
students3
submit()
submit()
submit()
submit()
reset?
)
reset
gather()
?gather
?separate
reset
reset()
students3
gather(students3, class, class1:class5, remove = TRUE)
gather(students3, class, 1:5, remove = TRUE)
gather(students3, class, 1:5, rm.na = TRUE)
?gather
gather(students3, class, class1:class5, rm.na = TRUE)
gather(students3, test ,class1:class5, rm.na = TRUE)
submit()
submit()
gather(students3, class, grades, class1:class5)
gather(students3, class, grades, 1:5)
gather(students3, class, grades, class1:class5)
gather(students3, class, grades, class1:class5, rm.na=TRUE)
gather(students3, class, grades, class1:class5)
gather(students3, class, grades, class1:class5, rm.na=TRUE)
gather(students3, class, grades, class1:class5)
students3 %>%
gather(class ,grades, class1:class5 ,rm.na = TRUE) %>%
print
gather(studets3, class ,grades, class1:class5 ,rm.na = TRUE) %>%
print
gather(studets3, class ,grades, class1:class5 ,rm.na = TRUE)
gather(studets3, class ,grades, class1:class5)
gather(studets3, class, class1:class5)
gather(studets3, grades, class, class1:class5)
gather(students3, grades, class, class1:class5)
reset()
?gather
students3
submit()
submit()
submit()
reset()
submit()
?spread
submit()
submit()
reset()
submit()
submit()
submit()
reset()
submit()
reset()
students3
submit()
submit()
reset()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
submit()
submit()
reset()
submit()
submit()
submit()
submit()
passed
failed
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
rbind_list(passed, failed)
sat
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
thid_day <- today()
this_day
this_day <- today()
this_day
year(this_day); month(this_day); day(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt)
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment<-update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(now())
this_moment <- update(this_moment, hours=8, minute=16, seconds=55)
update(this_moment, hours=8, minute=16, seconds=55)
this_moment <- update(this_moment, hours=8, minute=16, seconds=55)
this_moment <- update(this_moment, hours=8, minute=34, seconds=55)
update(this_moment, hours=8, minute=34, seconds=55)
this_moment <- now()
update(this_moment, hours=8, minute=34, seconds=55)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
now(tzone="America/New_York")
nyc<-now(tzone="America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours=17, minutes=34)
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart+hours(15)+minutes(50)
?with_tz
with_tz(arrive, tzone="Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- subridate("June 17, 2008", tz = "Singapore")
last_time <- lubridate("June 17, 2008", tz = "Singapore")
last_time <- lubridate("June 17, 2008", tzone = "Singapore")
last_time <- with_tz("June 17, 2008", tzone = "Singapore")
last_time <- "June 17, 2008"
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive, attr(last_time, "America/New_York"))
how_long <- new_interval(last_time, arrive, attr(start, "America/New_York"))
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
q()
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
mtcars
head(mtcars)
names(mtcars)
exit((
)
q()
library(SDSFoundations)
animaldata <- AnimalData
dim(animaldata)
names(animaldata)
view(animaldata)
display(animaldata)
#Assign the value 6+2 to x
x <- 6+2
# ## R code goes here
setwd("~/GitHub/RepData_PeerAssessment1")
